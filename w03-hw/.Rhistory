?cats''
?cats'
?cats
?cats
library(MASS)
cat_model  = lm(Hwt ~ Bwt, data=cats)
library(MASS)
cat_model  = lm(Hwt ~ Bwt, data=cats)
test_statistic = summary(cat_model)$coefficients[2,3]
summary(cat_model)
test_statistic^2
library(MASS)
cat_model  = lm(Hwt ~ Bwt, data=cats)
test_statistic = summary(cat_model)$coefficients[2,3]
df_cat = df.residual(cat_model)
p_value = pt(t)
pt(test_statistic, df=df_cat, lower.tail=FALSE)
2*pt(test_statistic, df=df_cat, lower.tail=FALSE)
df_cat
2*pt(test_statistic, df=df_cat)
library(MASS)
cat_model  = lm(Hwt ~ Bwt, data=cats)
test_statistic = summary(cat_model)$coefficients[2,3]#test statistic is just square root of F test statistic.
df_cat = df.residual(cat_model)
p_value = 2*pt(test_statistic, df=df_cat, lower.tail=FALSE)#or
p_value_2 = summary(cat_model)$coefficients[2,4]
?cats
ci_90 = c(cat_model$coefficients[[2]] - qt(.05, df = df_cat, lower.tail = FALSE)*summary(cat_model)$coefficients[2,2], cat_model$coefficients[[2]] + qt(.05, df = df_cat, lower.tail = FALSE)*summary(cat_model)$coefficients[2,2])
?confint
ci_90 = confint(cat_model, 'Bwt', level=.90)
ci_99 = confint(cat_model, '(Intercept)', level=.99)
predict_df = data.frame(Bwt = c(2.1, 2.8))
ci_99_mean = predict.lm(cat_model, newdata = predict_df, level = .99, interval = 'confidence')
View(ci_99_mean)
ci_99_mean$fit[1] - ci_99_mean$lwr[1]
ci_99_mean$fit[1,1] - ci_99_mean$lwr[1,2]
ci_99_mean[1,1] - ci_99_mean[1,2]
ci_99_mean[2,1] - ci_99_mean[2,2]
mean(cat$Bwt)
predict_df = data.frame(Bwt = c(2.1, 2.8))
ci_99_mean = predict.lm(cat_model, newdata = predict_df, level = .99, interval = 'confidence')
ci_99_21 = c(ci_99_mean[1,2], ci_99_mean[1,3])
ci_99_28 = c(ci_99_mean[2,2], ci_99_mean[2,3])
mean(cats$Bwt)
predict_dfe = data.frame(Bwt = c(2.8, 4.2))
ci_99_e = predict.lm(cat_model, newdata = predict_dfe, level = .99, interval = 'prediction')
ci_99e_28 - c(ci_99_e[1,2], ci_99_e[1,3])
predict_dfe = data.frame(Bwt = c(2.8, 4.2))
ci_99_e = predict.lm(cat_model, newdata = predict_dfe, level = .99, interval = 'prediction')
ci_99e_28 = c(ci_99_e[1,2], ci_99_e[1,3])
ci_99e_42 = c(ci_99_e[2,2], ci_99_e[2,3])
View(ci_99_e)
ci_99e_28
ci_99e_42
ci_99_e[1,1] - ci_99e_28[[1]]
ci_99_e[2,1] - ci_99e_42[[1]]
View(ci_99_mean)
library(ggplot2)
ggplot(cats, aes(x = Bwt, y = Hwt))
library(ggplot2)
ggplot(cats, aes(x = Bwt, y = Hwt)) + geom_point(aes(size = Bwt), color = 'orange')
library(ggplot2)
ggplot(cats, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange')
?geom_smooth
library(ggplot2)
ggplot(cats, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90)
library(ggplot2)
ggplot(cats, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr), color = 'green', linetype = 'dashed') + geom_line(aes(y=upr), color = 'green', linetype = 'dashed')
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr), color = 'green', linetype = 'dashed') + geom_line(aes(y=upr), color = 'green', linetype = 'dashed')
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr, color = 'green'), linetype = 'dashed') + geom_line(aes(y=upr, color = 'green'), linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats")
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr, color = 'green'), color = 'green', linetype = 'dashed') + geom_line(aes(y=upr, color = 'green'), linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats")
?scale_color_manual
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90, aes(color = 'blue')) + geom_line(aes(y=lwr, color = 'green'), color = 'green', linetype = 'dashed') + geom_line(aes(y=upr, color = 'green'), color = 'green', linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = )
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90, aes(color = 'blue')) + geom_line(aes(y=lwr, color = 'green'), color = 'green', linetype = 'dashed') + geom_line(aes(y=upr, color = 'green'), color = 'green', linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('green', 'blue'), labels = c('90% Prediction Bands', 'Regression Line'))
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr, color = 'green'), color = 'green', linetype = 'dashed') + geom_line(aes(y=upr, color = 'green'), color = 'green', linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('green', 'blue'), labels = c('90% Prediction Bands', 'Regression Line'))
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr, color = 'green'), color = 'green', linetype = 'dashed') + geom_line(aes(y=upr, color = 'green'), color = 'green', linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('green'), labels = c('90% Prediction Bands'))
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr, color = 'green_lwr'), color = 'green', linetype = 'dashed') + geom_line(aes(y=upr, color = 'green_upr'), color = 'green', linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('green_lwr, green_upr'), labels = c('90% Prediction Bands'))
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr, color = 'green_lwr'), linetype = 'dashed') + geom_line(aes(y=upr, color = 'green_upr'), linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('green_lwr' = "green", 'green_upr' = "green"), labels = c('90% Prediction Bands'))
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90) + geom_line(aes(y=lwr, color = 'green_lwr'), linetype = 'dashed') + geom_line(aes(y=upr, color = 'green_upr'), linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('green_lwr' = "green", 'green_upr' = "green"), labels = c('90% Prediction Bands', '90% Prediction Bands'))
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90 + aes(color = 'regression')) + geom_line(aes(y=lwr, color = 'green_lwr'), linetype = 'dashed') + geom_line(aes(y=upr, color = 'green_upr'), linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('green_lwr' = "green", 'green_upr' = "green", 'regression' = 'blue'), labels = c('90% Prediction Bands', '90% Prediction Bands', 'Regression Line & 90% Confidence Bands'))
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
graph_df = cbind(cats, predict_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90, aes(color = 'regression')) + geom_line(aes(y=lwr, color = 'green_lwr'), linetype = 'dashed') + geom_line(aes(y=upr, color = 'green_upr'), linetype = 'dashed') + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('green_lwr' = "green", 'green_upr' = "green", 'regression' = 'blue'), labels = c('90% Prediction Bands', '90% Prediction Bands', 'Regression Line & 90% Confidence Bands'))
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
confidence_new = predict.lm(cat_model, interval = 'confidence', level = .90)
View(confidence_new)
View(predict_new)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
names(predict_new) = c("fit_pred", "pred_lwr", "pred_upr")
View(predict_new)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
names(predict_new)
names(predict_new)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
colnames(predict_new) = c("fit_pred", "pred_lwr", "pred_upr")
View(predict_new)
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
colnames(predict_new) = c("fit_pred", "pred_lwr", "pred_upr")
confidence_new = predict.lm(cat_model, interval = 'confidence', level = .90)
colnames(confidence_new) = c("fit_conf", "conf_lwr", "conf_upr")
graph_df = cbind(cats, predict_new, confidence_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90, aes(color = 'regression'), se = FALSE) + geom_line(aes(y=pred_lwr, color = 'pred_lwr'), linetype = 'dashed') + geom_line(aes(y=pred_upr, color = 'pred_upr'), linetype = 'dashed') + geom_line(aes(y=conf_lwr, color = 'conf_lwr')) + geom_line(aes(y=conf_upr, color = 'conf_upr')) + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('pred_lwr' = "green", 'pred_upr' = "green", 'regression' = 'blue', 'conf_lwr' = 'darkorchid4', 'conf_upr' = 'darkorchid4'), labels = c('90% Prediction Bands', '90% Prediction Bands', 'Regression Line', '90% Confidence Bands', '90% Confidence Bands'))
library(ggplot2)
predict_new = predict.lm(cat_model, interval = 'prediction', level=.90)
colnames(predict_new) = c("fit_pred", "pred_lwr", "pred_upr")
confidence_new = predict.lm(cat_model, interval = 'confidence', level = .90)
colnames(confidence_new) = c("fit_conf", "conf_lwr", "conf_upr")
graph_df = cbind(cats, predict_new, confidence_new)
ggplot(graph_df, aes(x = Bwt, y = Hwt)) + geom_point(color = 'orange') + geom_smooth(method = 'lm', formula = y ~ x, level = .90, aes(color = 'regression'), se = FALSE) + geom_line(aes(y=pred_lwr, color = 'pred_lwr'), linetype = 'dashed') + geom_line(aes(y=pred_upr, color = 'pred_upr'), linetype = 'dashed') + geom_line(aes(y=conf_lwr, color = 'conf_lwr')) + geom_line(aes(y=conf_upr, color = 'conf_upr')) + ggtitle("Heart Weight vs. Body Weight in Cats") + xlab('Body Weight') + ylab('Heart Weight') + scale_color_manual(name = 'Legend', values = c('pred_lwr' = "green", 'pred_upr' = "green", 'regression' = 'blue', 'conf_lwr' = 'darkorchid4', 'conf_upr' = 'darkorchid4'), labels = c('90% Confidence Bands', '90% Confidence Bands', '90% Prediction Bands', '90% Prediction Bands', 'Regression Line'))
test_statistic_g = (cat_model$coefficients[[2]] - 4) / summary(cat_model)$coefficients[2,2]
summary(cat_model)
test_statistic_g = (cat_model$coefficients[[2]] - 0) / summary(cat_model)$coefficients[2,2]
test_statistic_g = (cat_model$coefficients[[2]] - 4) / summary(cat_model)$coefficients[2,2]
test_statistic_g = (cat_model$coefficients[[2]] - 4) / summary(cat_model)$coefficients[2,2]
p_value = 2*pt(test_statistic_g, df = df_cat, lower.tail = FALSE)
test_statistic_g = (cat_model$coefficients[[2]] - 4) / summary(cat_model)$coefficients[2,2]
p_value_g = 2*pt(test_statistic_g, df = df_cat, lower.tail = FALSE)
library(MASS)
cat_model  = lm(Hwt ~ Bwt, data=cats)
test_statistic = summary(cat_model)$coefficients[2,3]#test statistic is just square root of F test statistic.
df_cat = df.residual(cat_model)
p_value = 2*pt(test_statistic, df=df_cat, lower.tail=FALSE)#or
p_value_2 = summary(cat_model)$coefficients[2,4]#will be equal to calculation above
ozone_wind_model  = lm(ozone ~ wind, data = Ozone)
data(Ozone, package = "mlbench")
Ozone = Ozone[, c(4, 6, 7, 8)]
colnames(Ozone) = c("ozone", "wind", "humidity", "temp")
Ozone = Ozone[complete.cases(Ozone), ]
ozone_wind_model  = lm(ozone ~ wind, data = Ozone)
test_stat_2a = (ozone_wind_model$coefficients[[2]] - 0) / summary(ozone_wind_model)$coefficients[2,2]
ozone_wind_model  = lm(ozone ~ wind, data = Ozone)
test_stat_2a = (ozone_wind_model$coefficients[[2]] - 0) / summary(ozone_wind_model)$coefficients[2,2]
p_value = 2*pt(test_stat_2a, df = df.residual(ozone_wind_model), lower.tail = TRUE)
summary(ozone_wind_model)
ozone_wind_model  = lm(ozone ~ wind, data = Ozone)
test_stat_2a = (ozone_wind_model$coefficients[[2]] - 0) / summary(ozone_wind_model)$coefficients[2,2]
p_value_2a = 2*pt(test_stat_2a, df = df.residual(ozone_wind_model), lower.tail = TRUE)
ozone_temp_model  = lm(ozone ~ temp, data = Ozone)
test_stat_2b = (ozone_temp_model$coefficients[[2]] - 0) / summary(ozone_temp_model)$coefficients[2,2]
p_value_2b = 2*pt(test_stat_2b, df = df.residual(ozone_temp_model), lower.tail = TRUE)
summary(ozone_temp_model)
ozone_temp_model  = lm(ozone ~ temp, data = Ozone)
test_stat_2b = (ozone_temp_model$coefficients[[2]] - 0) / summary(ozone_temp_model)$coefficients[2,2]
p_value_2b = 2*pt(test_stat_2b, df = df.residual(ozone_temp_model), lower.tail = FALSE)
