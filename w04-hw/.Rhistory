library(readr)
nutrition = read_csv('nutrition-2018.csv')
nutr_mod = lm(Calories ~ Fat + Sugar + Sodium, data = nutrition)
nutr_ftest = summary(nutr_mod)$fstatistic[[1]]
nutr_pval = pf(nutr_ftest, 4, length(nutrition$Calories) - 4, lower.tail=FALSE)
summary(nutr_mod)
library(readr)
nutrition = read_csv('nutrition-2018.csv')
nutr_mod = lm(Calories ~ Fat + Sugar + Sodium, data = nutrition)
nutr_ftest = summary(nutr_mod)$fstatistic[[1]]
nutr_pval = pf(nutr_ftest, 3, length(nutrition$Calories) - 4, lower.tail=FALSE)
nutr_pval = pf(nutr_ftest, 3, length(nutrition$Calories) - 4, lower.tail=FALSE)
nutr_ftest = summary(nutr_mod)$fstatistic[[1]]
summary(nutr_mod)
nutr_mod$coefficients
bigmac_pred = data.frame(Fat = 28, Sugar = 9, Sodium = 950)
predict.lm(nutr_mod, bigmac_pred)
library(readr)
nutrition = read_csv('nutrition-2018.csv')
nutr_mod = lm(Calories ~ Fat + Sugar + Sodium, data = nutrition)
nutr_ftest = summary(nutr_mod)$fstatistic[[1]]
nutr_pval = pf(nutr_ftest, 3, length(nutrition$Calories) - 4, lower.tail=FALSE)
nutr_mod$coefficients
View(nutr_mod)
View(nutrition)
bigmac_pred = data.frame(Fat = 28, Sugar = 9, Sodium = 950)
predict.lm(nutr_mod, bigmac_pred)
install.packages("ISLR")
sd_calories = sd(nutrition$Calories)
se_calmod = summary(nutr_mod)$sigma
summary(nutr_mod)
nutr_rsqr = summary(nutr_mod)$r.squared
beta2_confint = confint(nutr_mod, 'Sugar', level=.95)
confint(nutr_mod, 'Sugar', level=.95)
beta2_confint = confint(nutr_mod, 'Sugar', level=.95)
lowerb2 = beta2_confint[[1]]
upperb2 = beta2_confint[[2]]
beta0_confint = confint(nutr_mod, '(Intercept)', level=.99)
lowerb0 = beta2_confint[[1]]
upperb0 = beta2_confint[[2]]
pred_1h = data.frame(Fat=24, Sugar=0, Sodium=350)
meanint_1h = predict.lm(nutr_mod, pred_1h, level=.90, interval='confidence')
ssr_mod1 = sum(q2_mod1$residuals^2)
goalies = read_csv('goalies.csv')
q2_mod1 = lm(W ~ GA + SV, data='goalies')
View(goalies)
q2_mod1 = lm(W ~ GA + SV, data='goalies')
goalies = read_csv('goalies.csv')
goalies = read_csv('goalies.csv')
q2_mod1 = lm(W ~ GA + SV, data='goalies')
q2_mod1 = lm(W ~ GA + SV, data='goalies')
q2_mod2 = lm(W ~ GA + SV + SA + MIN + SO, data='goalies')
View(goalies)
q2_mod1 = lm(W ~ GA + SV, data=goalies)
q2_mod2 = lm(W ~ GA + SV + SA + MIN + SO, data=goalies)
q2_mod3 = lm(W ~ GA + SV + SA + MIN + SO + SV_PCT + GAA + PIM, data=goalies)
ssr_mod1 = sum(q2_mod1$residuals^2)
ssr_mod2 = sum(q2_mod2$residuals^2)
F_testa = ((ssr_mod1 - ssr_mod2) / 3) / (ssr_mod2 / 462 - 6)
ssr_mod1 = sum(q2_mod1$residuals^2)
ssr_mod2 = sum(q2_mod2$residuals^2)
F_testa = ((ssr_mod1 - ssr_mod2) / 3) / (ssr_mod2 / 462 - 6)
p_value2a = pf(F_testa, 3, 456, lower.tail=FALSE)
ssr_mod3 = sum(q2_mod3$residuals^2)
F_testb = ((ssr_mod2 - ssr_mod3) / 3) / (ssr_mod2 / 462 - 9)
p_value2b = pf(F_testa, 3, 453, lower.tail=FALSE)
q2c_sebsv = summary(q2_mod3)$coefficients[3, 2]
q2c_ttest = ((q2_mod3$coefficients[[3]] - 0) / q2c_sebsv)
summary(q2_mod3)
q2c_sebsv = summary(q2_mod3)$coefficients[3, 2]
q2c_ttest = ((q2_mod3$coefficients[[3]] - 0) / q2c_sebsv)
q2c_pval = pt(q2c_ttest, (462 - 8 - 1))
data(Ozone, package = "mlbench")
Ozone = Ozone[, c(4, 6, 7, 8)]
colnames(Ozone) = c("ozone", "wind", "humidity", "temp")
Ozone = Ozone[complete.cases(Ozone), ]
X = cbind(rep(1, length(Ozone$ozone)), Ozone$wind, Ozone$humidity, Ozone$temp)
X
X = cbind(rep(1, length(Ozone$ozone)), Ozone$wind, Ozone$humidity, Ozone$temp)
Y = Ozone$ozone
Y
X = cbind(rep(1, length(Ozone$ozone)), Ozone$wind, Ozone$humidity, Ozone$temp)
Y = cbind(Ozone$ozone)
Y
?crossprod
X = cbind(rep(1, length(Ozone$ozone)), Ozone$wind, Ozone$humidity, Ozone$temp)
Y = cbind(Ozone$ozone)
XTX = crossprod(X, X)
X = cbind(rep(1, length(Ozone$ozone)), Ozone$wind, Ozone$humidity, Ozone$temp)
Y = cbind(Ozone$ozone)
XTX = crossprod(X, X)
XTX_inv = solve(XTX)
XTY = crossprod(X, Y)
beta_hat_no_lm = as.vector(XTX_inv %*% XTY)
beta_hat_no_lm
X = cbind(rep(1, length(Ozone$ozone)), Ozone$wind, Ozone$humidity, Ozone$temp)
Y = cbind(Ozone$ozone)
XTX = crossprod(X, X)
XTX_inv = solve(XTX)
XTY = crossprod(X, Y)
beta_hat_no_lm = as.vector(XTX_inv %*% XTY)
beta_hat_no_lm
sum(beta_hat_no_lm^2)
q3b_mod = lm(ozone ~ wind + humidity + temp, data=Ozone)
beta_hat_lm = as.vector(q3b_mod$coefficients)
beta_hat_lm
sum(beta_hat_lm^2)
all.equal(beta_hat_no_lm, beta_hat_lm)
?Auto
# load required package, remove "name" variable
library(ISLR)
Auto = subset(Auto, select = -c(name))
set.seed(1)
auto_trn_idx = sample(1:nrow(Auto), 292)
auto_trn = Auto[auto_trn_idx,]
auto_tst = Auto[-auto_trn_idx,]
?Auto
library(forecast)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight + acceleration + year + origin, data=auto_trn)
accuracy(q4_mod1_trn)
accuracy(q4_mod1_trn)[[2]]
rmse
?rmse
install.packages("Metrics")
?rmse
rmse
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1pred
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1_trnRMSE = accuracy(q4_mod1_trn)[[2]]
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
q4_mod1_trnRMSE
q4_mod1_tstRMSE
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight + acceleration + year, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight + acceleration + origin, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ horsepower + weight + acceleration + year, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
cor(auto_trn)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight + year + origin, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
library(forecast)
library(Metrics)
q4_mod1_trn = lm(mpg ~ cylinders + displacement + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod1predtrn = predict(q4_mod1_trn, auto_trn)
q4_mod1_trnRMSE = rmse(auto_trn$mpg, q4_mod1predtrn)
q4_mod1pred = predict(q4_mod1_trn, auto_tst)
q4_mod1_tstRMSE = rmse(auto_tst$mpg, q4_mod1pred)
q4_mod2_trn = lm(mpg ~ displacement, data=auto_trn)
q4_mod2predtrn = predict(q4_mod2_trn, auto_trn)
q4_mod2_trnRMSE = rmse(auto_trn$mpg, q4_mod2predtrn)
q4_mod2pred = predict(q4_mod2_trn, auto_tst)
q4_mod2_tstRMSE = rmse(auto_tst$mpg, q4_mod2pred)
q4_mod3_trn = lm(mpg ~ cylinders + horsepower + weight + year, data=auto_trn)
q4_mod3predtrn = predict(q4_mod3_trn, auto_trn)
q4_mod3_trnRMSE = rmse(auto_trn$mpg, q4_mod3predtrn)
q4_mod3pred = predict(q4_mod3_trn, auto_tst)
q4_mod3_tstRMSE = rmse(auto_tst$mpg, q4_mod3pred)
q4_mod4_trn = lm(mpg ~ cylinders + horsepower + displacement + weight + year, data=auto_trn)
q4_mod4predtrn = predict(q4_mod4_trn, auto_trn)
q4_mod4_trnRMSE = rmse(auto_trn$mpg, q4_mod4predtrn)
q4_mod4pred = predict(q4_mod4_trn, auto_tst)
q4_mod4_tstRMSE = rmse(auto_tst$mpg, q4_mod4pred)
q4_mod5_trn = lm(mpg ~ cylinders + horsepower + weight + acceleration + year + origin, data=auto_trn)
q4_mod5predtrn = predict(q4_mod5_trn, auto_trn)
q4_mod5_trnRMSE = rmse(auto_trn$mpg, q4_mod5predtrn)
q4_mod5pred = predict(q4_mod5_trn, auto_tst)
q4_mod5_tstRMSE = rmse(auto_tst$mpg, q4_mod5pred)
q3a_pred = beta_hat_no_lm[[1]] + beta_hat_no_lm[[2]]*Ozone$wind + beta_hat_no_lm[[3]]*Ozone$humidity + beta_hat_no_lm[[4]]*Ozone$temp
q3a_fitted = beta_hat_no_lm[[1]] + beta_hat_no_lm[[2]]*Ozone$wind + beta_hat_no_lm[[3]]*Ozone$humidity + beta_hat_no_lm[[4]]*Ozone$temp
ssqr = sum((Ozone$ozone - q3a_fitted)^2) / (344 - 4)
q3a_fitted = beta_hat_no_lm[[1]] + beta_hat_no_lm[[2]]*Ozone$wind + beta_hat_no_lm[[3]]*Ozone$humidity + beta_hat_no_lm[[4]]*Ozone$temp
ssqr = sum((Ozone$ozone - q3a_fitted)^2) / (344 - 4)
var_beta_hat = ssqr * XTX_inv
var_beta_hat
summary(q3b_mod)
sqrt(ssqr)
q3a_fitted = beta_hat_no_lm[[1]] + beta_hat_no_lm[[2]]*Ozone$wind + beta_hat_no_lm[[3]]*Ozone$humidity + beta_hat_no_lm[[4]]*Ozone$temp
ssqr = sum((Ozone$ozone - q3a_fitted)^2) / (344 - 4)
sqrt(ssqr)
all.equal(sqrt(ssqr), summary(q3b_mod)$sigma)#verify if values are equal
q3a_fitted = beta_hat_no_lm[[1]] + beta_hat_no_lm[[2]]*Ozone$wind + beta_hat_no_lm[[3]]*Ozone$humidity + beta_hat_no_lm[[4]]*Ozone$temp
ssqr = sum((Ozone$ozone - q3a_fitted)^2) / (344 - 4)
sqrt(ssqr)
all.equal(sqrt(ssqr), summary(q3b_mod)$sigma)#Returns TRUE if results are equal.
ssr_nolm = sum((Ozone$ozone - q3a_fitted)^2)
sst_nolm = sum((Ozone$ozone - mean(Ozone$ozone))^2)
r2_nolm = 1 - (ssr_nolm/sst_nolm)
r2_nolm
all.equal(r2_nolm, summary(q3b_mod)$r.squared)
summary(q3b_mod)
sqrt((1/100)*sum((auto_tst - q4_mod1pred)^2))
sqrt(sum((auto_tst - q4_mod1pred)^2))
sqrt(sum((auto_tst - q4_mod1pred)^2)/100)
sqrt(sum((auto_tst$mpg - q4_mod1pred)^2)/100)
